#!/bin/bash
###$ -l h_vmem=50G
#$ -R y
#$ -S /bin/bash
#$ -cwd
#$ -t 1-908
#$ -tc 25
#$ -q h0809.q
#$ -pe ompi24 4

source $HOME/.profile

### Script to run a bwa mem, bam and sort bam with the clean reads generated by script "1"

# Required modules are: bwa, samtools, bcftools

## 1 Fill in directories if different from the workspace setup, as well as population-specific metadata (1 time for each species - try to solve that - maybe just change the "@file"?)

input_reads=/users-d3/ccuevas/RESEQUENCING/P_mauretanicus
#input_reads=/users-d3/ccuevas/RESEQUENCING/P_yelkouan
#input_reads=/users-d3/ccuevas/RESEQUENCING/P_puffinus

bam_dir=/users-d3/jferrer/pmau_popgen/SNP_calling/mt_bams/raw_bams

metadata=/users-d3/jferrer/pmau_popgen/SNP_calling/metadata/PM_popgen_metadata.tsv
#metadata=/users-d3/jferrer/pmau_popgen/SNP_calling/metadata/PY_popgen_metadata.tsv
#metadata=/users-d3/jferrer/pmau_popgen/SNP_calling/metadata/PP_popgen_metadata.tsv

echo "metadata" $metadata
echo "input directory" $input_reads
echo "bam directory" $bam_dir

## 2 Also add path to reference and index it (in case it hasn't been indexed before)

reference=/users-d3/jferrer/pmau_popgen/SNP_calling/reference/Pmau_mitogenome_200_15600.fasta
bwa index $reference

# Repeat all the following steps for each ind
while read line
	do
		
		## 3 Read arrays 1 and 2 from the metadata file (corresponding to columns 3 and 4), and remove the 1st line using tail ##
		read1_array=$(echo $line | cut -d " " -f3)
		read1=$input_reads/$read1_array
		
		read2_array=$(echo $line | cut -d " " -f4 )
		read2=$input_reads/$read2_array
		
		## 4 Generate output array with the ID in the 2nd column of the metadata file ##
		out_array=$(echo $line | cut -d " " -f2 )
		bam_out=$bam_dir/$out_array
		
		echo "reference" $reference
		echo "read1" $read1
		echo "read2" $read2
		echo "alignment" ${bam_out}.unsorted.raw.bam
		
		## 5 Align with bwa mem using 4 cores. Again, make sure the read name prefixes match! Also, specify bam output (-b) and filter out any unmaped groups (flag -F 4 in samtools)
		
		bwa mem -t 4 $reference ${read1} ${read2} | samtools view -b -F 4 -o ${bam_out}.unsorted.raw.bam
		
		## 6 Convert bam to sam, sort bam, index, flagstat
		
		samtools sort ${bam_out}.unsorted.raw.bam -o ${bam_out}.sorted.raw.bam
		samtools index ${bam_out}.sorted.raw.bam
		samtools flagstat ${bam_out}.sorted.raw.bam > ${bam_out}.mappingstats.txt

	done < $metadata
## 7 Remove the sam and unsorted bam files

#rm ${bam_dir}/*.sam
#rm ${bam_dir}/*.unsorted.raw.bam

## 8 To check that the bams are not corrupted, run (in the directory where the bams are):

#samtools quickcheck -v *.sorted.raw.bam > bad_bams.fofn   && echo 'all ok' || echo 'some files failed check, see bad_bams.fofn'
